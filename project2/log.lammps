LAMMPS (11 Aug 2017)
# 3d Lennard-Jones melt

units		lj
atom_style	atomic
boundary p p p

variable	xx equal ${size}
variable	xx equal 20
variable	yy equal ${size}
variable	yy equal 20
variable	zz equal ${size}
variable	zz equal 20
variable	xhalf equal ${size}/2.
variable	xhalf equal 20/2.
variable	yhalf equal ${size}/2.
variable	yhalf equal 20/2.
variable	zhalf equal ${size}/2.
variable	zhalf equal 20/2.
lattice		fcc ${rho}
lattice		fcc 0.421884
Lattice spacing in x,y,z = 2.11652 2.11652 2.11652
region		box block 0 ${xx} 0 ${yy} 0 ${zz}
region		box block 0 20 0 ${yy} 0 ${zz}
region		box block 0 20 0 20 0 ${zz}
region		box block 0 20 0 20 0 20
create_box	1 box
Created orthogonal box = (0 0 0) to (42.3304 42.3304 42.3304)
  2 by 2 by 2 MPI processor grid
create_atoms	1 box
Created 32000 atoms
mass		1 1.0
velocity	all create ${T} 1 loop geom dist gaussian
velocity	all create 1.500000 1 loop geom dist gaussian
timestep    ${dt}
timestep    0.001000
pair_style	lj/cut 3.0
pair_coeff	1 1 1.0 1.0 3.0

neighbor	0.3 bin
neigh_modify	delay 0 every 20 check no
#region      cylinder cylinder x ${yhalf} ${zhalf} ${r} 0 ${size}
#delete_atoms region cylinder

label loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 1 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 1 sphere 3.5648787021637 ${yrand} ${zrand} ${r}
    region 1 sphere 3.5648787021637 13.2219791412354 ${zrand} ${r}
    region 1 sphere 3.5648787021637 13.2219791412354 6.54940247535706 ${r}
    region 1 sphere 3.5648787021637 13.2219791412354 6.54940247535706 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 1
717 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 2 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 2 sphere 4.08841252326965 ${yrand} ${zrand} ${r}
    region 2 sphere 4.08841252326965 7.1297299861908 ${zrand} ${r}
    region 2 sphere 4.08841252326965 7.1297299861908 4.05989646911621 ${r}
    region 2 sphere 4.08841252326965 7.1297299861908 4.05989646911621 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 2
2922 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 3 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 3 sphere 15.4222106933594 ${yrand} ${zrand} ${r}
    region 3 sphere 15.4222106933594 5.36366581916809 ${zrand} ${r}
    region 3 sphere 15.4222106933594 5.36366581916809 12.8555583953857 ${r}
    region 3 sphere 15.4222106933594 5.36366581916809 12.8555583953857 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 3
5280 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 4 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 4 sphere 9.57299709320068 ${yrand} ${zrand} ${r}
    region 4 sphere 9.57299709320068 19.7856557369232 ${zrand} ${r}
    region 4 sphere 9.57299709320068 19.7856557369232 19.3600583076477 ${r}
    region 4 sphere 9.57299709320068 19.7856557369232 19.3600583076477 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 4
5944 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 5 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 5 sphere 0.939493179321289 ${yrand} ${zrand} ${r}
    region 5 sphere 0.939493179321289 16.8653666973114 ${zrand} ${r}
    region 5 sphere 0.939493179321289 16.8653666973114 12.5041878223419 ${r}
    region 5 sphere 0.939493179321289 16.8653666973114 12.5041878223419 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 5
6468 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 6 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 6 sphere 17.9049015045166 ${yrand} ${zrand} ${r}
    region 6 sphere 17.9049015045166 7.15038061141968 ${zrand} ${r}
    region 6 sphere 17.9049015045166 7.15038061141968 15.2460825443268 ${r}
    region 6 sphere 17.9049015045166 7.15038061141968 15.2460825443268 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 6
7171 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 7 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 7 sphere 15.3372466564178 ${yrand} ${zrand} ${r}
    region 7 sphere 15.3372466564178 4.57068681716919 ${zrand} ${r}
    region 7 sphere 15.3372466564178 4.57068681716919 0.109800100326538 ${r}
    region 7 sphere 15.3372466564178 4.57068681716919 0.109800100326538 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 7
8472 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 8 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 8 sphere 15.1716411113739 ${yrand} ${zrand} ${r}
    region 8 sphere 15.1716411113739 11.4711689949036 ${zrand} ${r}
    region 8 sphere 15.1716411113739 11.4711689949036 13.5088491439819 ${r}
    region 8 sphere 15.1716411113739 11.4711689949036 13.5088491439819 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 8
10018 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 9 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 9 sphere 14.4255042076111 ${yrand} ${zrand} ${r}
    region 9 sphere 14.4255042076111 9.7699499130249 ${zrand} ${r}
    region 9 sphere 14.4255042076111 9.7699499130249 4.18964266777039 ${r}
    region 9 sphere 14.4255042076111 9.7699499130249 4.18964266777039 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 9
11938 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 10 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 10 sphere 19.1797018051147 ${yrand} ${zrand} ${r}
    region 10 sphere 19.1797018051147 7.20333456993103 ${zrand} ${r}
    region 10 sphere 19.1797018051147 7.20333456993103 4.92026329040527 ${r}
    region 10 sphere 19.1797018051147 7.20333456993103 4.92026329040527 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 10
12100 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 11 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 11 sphere 5.61102032661438 ${yrand} ${zrand} ${r}
    region 11 sphere 5.61102032661438 10.0484609603882 ${zrand} ${r}
    region 11 sphere 5.61102032661438 10.0484609603882 6.48590922355652 ${r}
    region 11 sphere 5.61102032661438 10.0484609603882 6.48590922355652 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 11
12266 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 12 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 12 sphere 11.575243473053 ${yrand} ${zrand} ${r}
    region 12 sphere 11.575243473053 19.1601371765137 ${zrand} ${r}
    region 12 sphere 11.575243473053 19.1601371765137 7.9900336265564 ${r}
    region 12 sphere 11.575243473053 19.1601371765137 7.9900336265564 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 12
13683 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 13 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 13 sphere 19.856116771698 ${yrand} ${zrand} ${r}
    region 13 sphere 19.856116771698 18.4308636188507 ${zrand} ${r}
    region 13 sphere 19.856116771698 18.4308636188507 11.9574856758118 ${r}
    region 13 sphere 19.856116771698 18.4308636188507 11.9574856758118 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 13
13946 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 14 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 14 sphere 13.5123646259308 ${yrand} ${zrand} ${r}
    region 14 sphere 13.5123646259308 16.6821336746216 ${zrand} ${r}
    region 14 sphere 13.5123646259308 16.6821336746216 11.639256477356 ${r}
    region 14 sphere 13.5123646259308 16.6821336746216 11.639256477356 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 14
14128 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 15 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 15 sphere 17.092547416687 ${yrand} ${zrand} ${r}
    region 15 sphere 17.092547416687 12.4893116950989 ${zrand} ${r}
    region 15 sphere 17.092547416687 12.4893116950989 18.0234730243683 ${r}
    region 15 sphere 17.092547416687 12.4893116950989 18.0234730243683 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 15
14352 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 16 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 16 sphere 18.1353008747101 ${yrand} ${zrand} ${r}
    region 16 sphere 18.1353008747101 1.80032253265381 ${zrand} ${r}
    region 16 sphere 18.1353008747101 1.80032253265381 15.24493932724 ${r}
    region 16 sphere 18.1353008747101 1.80032253265381 15.24493932724 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 16
14787 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 17 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 17 sphere 4.79826807975769 ${yrand} ${zrand} ${r}
    region 17 sphere 4.79826807975769 2.29838013648987 ${zrand} ${r}
    region 17 sphere 4.79826807975769 2.29838013648987 12.6607537269592 ${r}
    region 17 sphere 4.79826807975769 2.29838013648987 12.6607537269592 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 17
16788 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r2}
variable r equal 5.244755
    print ${r}
    print 5.244755
5.244755
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 18 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 18 sphere 13.6393845081329 ${yrand} ${zrand} ${r}
    region 18 sphere 13.6393845081329 12.2566449642181 ${zrand} ${r}
    region 18 sphere 13.6393845081329 12.2566449642181 15.860778093338 ${r}
    region 18 sphere 13.6393845081329 12.2566449642181 15.860778093338 5.244755
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 18
17417 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 19 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 19 sphere 0.151268243789673 ${yrand} ${zrand} ${r}
    region 19 sphere 0.151268243789673 11.7219471931458 ${zrand} ${r}
    region 19 sphere 0.151268243789673 11.7219471931458 14.424124956131 ${r}
    region 19 sphere 0.151268243789673 11.7219471931458 14.424124956131 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 19
17799 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa
variable loopi loop 20
    variable R equal random(0,1,1)
    if "${R} > 0.5" then         "variable r equal ${r2}"    else         "variable r equal ${r1}"
variable r equal ${r1}
variable r equal 3.496504
    print ${r}
    print 3.496504
3.496504
    variable xrand equal random(0,${xx},1)
    variable xrand equal random(0,20,1)
    variable yrand equal random(0,${yy},1)
    variable yrand equal random(0,20,1)
    variable zrand equal random(0,${zz},1)
    variable zrand equal random(0,20,1)
    region ${loopi} sphere ${xrand} ${yrand} ${zrand} ${r}
    region 20 sphere ${xrand} ${yrand} ${zrand} ${r}
    region 20 sphere 9.93841767311096 ${yrand} ${zrand} ${r}
    region 20 sphere 9.93841767311096 6.06338381767273 ${zrand} ${r}
    region 20 sphere 9.93841767311096 6.06338381767273 1.57994031906128 ${r}
    region 20 sphere 9.93841767311096 6.06338381767273 1.57994031906128 3.496504
    #delete_atoms region ${loopi}
    group 1 region ${loopi}
    group 1 region 20
18046 atoms in group 1
    next loopi
    jump ${filename} loopa
    jump lj.in loopa

variable    loopi delete

group pore subtract all 1
13954 atoms in group pore


compute temperature pore temp
compute stress pore stress/atom NULL
compute        p pore reduce sum c_stress[1] c_stress[2] c_stress[3]
variable       vol equal ${xx}*${yy}*${zz}*0.4360625
variable       vol equal 20*${yy}*${zz}*0.4360625
variable       vol equal 20*20*${zz}*0.4360625
variable       vol equal 20*20*20*0.4360625
#variable       press atom -(c_p[1]+c_p[2]+c_p[3])/(3*vol)


fix 1 pore nve

#fix 2 1 setforce 0.0 0.0 0.0
#fix 2 all nve

thermo ${Dump}
thermo 10

thermo_style	custom step c_temperature

#dump dump pore custom ${Dump} dump.xyz id type x y z#c_stress[1] c_stress[2] c_stress[3]
run		${Run}
run		10000
Neighbor list info ...
  update every 20 steps, delay 0 steps, check no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 3.3
  ghost atom cutoff = 3.3
  binsize = 1.65, bins = 26 26 26
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton
      stencil: half/bin/3d/newton
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 3.979 | 3.979 | 3.979 Mbytes
Step c_temperature 
       0    1.5046104 
      10    1.5067035 
      20    1.5127472 
      30    1.5226032 
      40    1.5361976 
      50    1.5533358 
      60    1.5735427 
      70    1.5957553 
      80    1.6177763 
      90    1.6356797 
     100    1.6445037 
     110    1.6412725 
     120    1.6269794 
     130    1.6059469 
     140    1.5836368 
     150    1.5642677 
     160    1.5500211 
     170    1.5416837 
     180    1.5394169 
     190    1.5427858 
     200    1.5507977 
     210     1.561289 
     220     1.572047 
     230    1.5827637 
     240    1.5929193 
     250    1.6016214 
     260    1.6094958 
     270    1.6175317 
     280     1.626285 
     290    1.6357419 
     300    1.6464597 
     310    1.6579291 
     320     1.667509 
     330    1.6739739 
     340    1.6788169 
     350    1.6839999 
     360    1.6901402 
     370    1.6961258 
     380    1.7006428 
     390     1.704639 
     400    1.7085191 
     410    1.7105451 
     420    1.7099817 
     430    1.7081897 
     440    1.7072043 
     450    1.7077788 
     460    1.7096224 
     470     1.713207 
     480    1.7173463 
     490    1.7200367 
     500    1.7207509 
     510    1.7198189 
     520    1.7186808 
     530    1.7184754 
     540    1.7202283 
     550    1.7244321 
     560    1.7297249 
     570    1.7348432 
     580    1.7388882 
     590    1.7402984 
     600    1.7386999 
     610    1.7352668 
     620    1.7321234 
     630    1.7319594 
     640     1.734472 
     650      1.73704 
     660    1.7382247 
     670     1.737941 
     680    1.7374704 
     690    1.7378177 
     700     1.738102 
     710    1.7374482 
     720    1.7362515 
     730    1.7357331 
     740    1.7365797 
     750    1.7386501 
     760    1.7405909 
     770    1.7412115 
     780    1.7405571 
     790       1.7392 
     800    1.7388102 
     810    1.7393343 
     820    1.7399093 
     830     1.740943 
     840    1.7432839 
     850    1.7456506 
     860    1.7463812 
     870    1.7452132 
     880    1.7430993 
     890    1.7424991 
     900     1.743825 
     910    1.7442169 
     920    1.7424521 
     930    1.7381807 
     940    1.7330822 
     950    1.7310747 
     960    1.7330505 
     970    1.7365435 
     980    1.7405517 
     990     1.744778 
    1000    1.7476692 
    1010    1.7491623 
    1020    1.7504749 
    1030    1.7520405 
    1040    1.7524264 
    1050    1.7497357 
    1060    1.7449194 
    1070    1.7401796 
    1080    1.7365446 
    1090    1.7349401 
    1100    1.7359826 
    1110    1.7382834 
    1120    1.7402558 
    1130    1.7417092 
    1140    1.7434307 
    1150    1.7453539 
    1160    1.7454917 
    1170    1.7435131 
    1180    1.7416781 
    1190    1.7418461 
    1200    1.7428591 
    1210    1.7433812 
    1220    1.7433889 
    1230    1.7439237 
    1240    1.7449659 
    1250     1.745487 
    1260     1.745206 
    1270    1.7445383 
    1280    1.7446382 
    1290    1.7458883 
    1300    1.7469065 
    1310    1.7464826 
    1320    1.7453524 
    1330    1.7452194 
    1340    1.7460936 
    1350    1.7473067 
    1360    1.7480779 
    1370    1.7476263 
    1380    1.7457076 
    1390    1.7427267 
    1400    1.7399519 
    1410    1.7381866 
    1420    1.7376093 
    1430    1.7378341 
    1440    1.7382374 
    1450    1.7378595 
    1460    1.7365841 
    1470    1.7353913 
    1480    1.7355537 
    1490     1.738309 
    1500    1.7426229 
    1510    1.7456199 
    1520    1.7467221 
    1530    1.7468458 
    1540    1.7469891 
    1550    1.7468962 
    1560    1.7462012 
    1570    1.7457681 
    1580    1.7465904 
    1590     1.748987 
    1600    1.7512924 
    1610     1.751937 
    1620    1.7511131 
    1630    1.7493493 
    1640     1.747015 
    1650    1.7445086 
    1660    1.7431902 
    1670    1.7438351 
    1680    1.7465453 
    1690    1.7499412 
    1700    1.7527086 
    1710    1.7543619 
    1720    1.7545219 
    1730    1.7532365 
    1740    1.7511431 
    1750    1.7487297 
    1760    1.7474705 
    1770    1.7476568 
    1780    1.7476195 
    1790    1.7460269 
    1800    1.7430906 
    1810    1.7408182 
    1820    1.7420913 
    1830    1.7464376 
    1840    1.7506184 
    1850    1.7533237 
    1860    1.7557988 
    1870    1.7577027 
    1880     1.757577 
    1890    1.7564378 
    1900    1.7554912 
    1910     1.754187 
    1920    1.7525461 
    1930    1.7521041 
    1940    1.7542027 
    1950    1.7581787 
    1960    1.7616004 
    1970    1.7619699 
    1980    1.7596821 
    1990    1.7573267 
    2000    1.7558227 
    2010    1.7548887 
    2020    1.7544999 
    2030    1.7538972 
    2040    1.7522026 
    2050    1.7502271 
    2060    1.7492703 
    2070    1.7483089 
    2080    1.7473689 
    2090    1.7476151 
    2100    1.7484786 
    2110    1.7491404 
    2120    1.7507231 
    2130    1.7534542 
    2140    1.7558467 
    2150     1.756277 
    2160    1.7548317 
    2170    1.7532382 
    2180     1.752295 
    2190    1.7524139 
    2200    1.7526895 
    2210    1.7527669 
    2220    1.7540368 
    2230    1.7565938 
    2240    1.7584253 
    2250    1.7583595 
    2260    1.7563723 
    2270    1.7527135 
    2280    1.7493943 
    2290    1.7479172 
    2300    1.7477805 
    2310    1.7483979 
    2320    1.7487711 
    2330    1.7487468 
    2340     1.749293 
    2350    1.7513882 
    2360    1.7542342 
    2370     1.756077 
    2380    1.7566512 
    2390    1.7566649 
    2400    1.7560644 
    2410    1.7553425 
    2420    1.7556359 
    2430    1.7567903 
    2440    1.7578493 
    2450    1.7587511 
    2460    1.7592745 
    2470    1.7590399 
    2480    1.7568271 
    2490    1.7534483 
    2500    1.7519375 
    2510    1.7543973 
    2520     1.759373 
    2530    1.7634779 
    2540    1.7644648 
    2550    1.7628265 
    2560    1.7599537 
    2570    1.7570365 
    2580    1.7545087 
    2590    1.7526653 
    2600    1.7523808 
    2610     1.753344 
    2620    1.7550537 
    2630    1.7572025 
    2640    1.7585684 
    2650    1.7587891 
    2660    1.7586214 
    2670    1.7595642 
    2680    1.7610985 
    2690    1.7620498 
    2700    1.7624691 
    2710     1.761317 
    2720    1.7584421 
    2730    1.7563055 
    2740    1.7548967 
    2750    1.7532115 
    2760    1.7509583 
    2770    1.7493254 
    2780     1.751224 
    2790    1.7561984 
    2800    1.7613413 
    2810    1.7645495 
    2820    1.7662015 
    2830    1.7660313 
    2840    1.7640616 
    2850     1.762136 
    2860    1.7610724 
    2870    1.7594906 
    2880    1.7565877 
    2890    1.7537757 
    2900    1.7521677 
    2910    1.7515043 
    2920     1.750967 
    2930     1.750409 
    2940    1.7509443 
    2950    1.7528286 
    2960    1.7547908 
    2970    1.7558367 
    2980    1.7565582 
    2990    1.7582582 
    3000     1.761125 
    3010    1.7650529 
    3020    1.7694608 
    3030    1.7725929 
    3040    1.7729451 
    3050    1.7702468 
    3060    1.7660746 
    3070    1.7619207 
    3080    1.7586379 
    3090     1.757211 
    3100    1.7578617 
    3110    1.7598029 
    3120    1.7611305 
    3130    1.7604716 
    3140    1.7591552 
    3150    1.7587031 
    3160    1.7600269 
    3170    1.7623429 
    3180    1.7642093 
    3190    1.7654286 
    3200    1.7666773 
    3210    1.7681979 
    3220    1.7691523 
    3230    1.7691014 
    3240    1.7676597 
    3250    1.7648229 
    3260    1.7609212 
    3270    1.7571039 
    3280    1.7540039 
    3290    1.7528176 
    3300    1.7540637 
    3310    1.7571351 
    3320    1.7595059 
    3330    1.7603244 
    3340    1.7607178 
    3350    1.7613944 
    3360     1.761936 
    3370    1.7621123 
    3380    1.7622283 
    3390     1.761781 
    3400    1.7605056 
    3410    1.7594286 
    3420    1.7597467 
    3430    1.7620413 
    3440    1.7656296 
    3450    1.7678889 
    3460    1.7676592 
    3470    1.7663736 
    3480    1.7653136 
    3490    1.7647469 
    3500    1.7645189 
    3510    1.7643255 
    3520    1.7628929 
    3530    1.7608558 
    3540    1.7611108 
    3550    1.7635572 
    3560    1.7664008 
    3570    1.7681066 
    3580    1.7694076 
    3590     1.769906 
    3600    1.7686129 
    3610    1.7668644 
    3620    1.7663668 
    3630    1.7661706 
    3640    1.7654758 
    3650    1.7659871 
    3660    1.7690524 
    3670    1.7727997 
    3680    1.7748513 
    3690    1.7749245 
    3700    1.7741337 
    3710    1.7733882 
    3720    1.7726758 
    3730    1.7718044 
    3740    1.7703144 
    3750    1.7683199 
    3760    1.7663846 
    3770    1.7659194 
    3780    1.7667033 
    3790    1.7666999 
    3800    1.7652248 
    3810     1.762965 
    3820    1.7620174 
    3830    1.7632455 
    3840    1.7647413 
    3850    1.7660604 
    3860      1.76728 
    3870    1.7675559 
    3880    1.7664232 
    3890    1.7644485 
    3900    1.7639563 
    3910    1.7653613 
    3920    1.7663007 
    3930    1.7657783 
    3940    1.7649708 
    3950    1.7641245 
    3960    1.7627264 
    3970    1.7611526 
    3980    1.7602885 
    3990    1.7595851 
    4000    1.7589627 
    4010    1.7588743 
    4020    1.7602314 
    4030    1.7624988 
    4040    1.7640918 
    4050    1.7653591 
    4060    1.7665751 
    4070    1.7662084 
    4080    1.7643133 
    4090    1.7635214 
    4100    1.7644647 
    4110    1.7659316 
    4120    1.7671359 
    4130    1.7675472 
    4140    1.7673538 
    4150    1.7669834 
    4160    1.7662432 
    4170    1.7650198 
    4180    1.7644171 
    4190    1.7645973 
    4200    1.7645668 
    4210    1.7648964 
    4220    1.7645423 
    4230     1.762151 
    4240    1.7582137 
    4250     1.755291 
    4260    1.7553284 
    4270    1.7572072 
    4280    1.7584661 
    4290     1.758504 
    4300    1.7589935 
    4310    1.7606802 
    4320    1.7636581 
    4330    1.7669221 
    4340    1.7687284 
    4350    1.7684699 
    4360    1.7666704 
    4370    1.7644306 
    4380    1.7626789 
    4390    1.7616588 
    4400       1.7613 
    4410    1.7612077 
    4420    1.7607896 
    4430    1.7600444 
    4440    1.7597852 
    4450    1.7602528 
    4460    1.7609715 
    4470    1.7614951 
    4480    1.7610779 
    4490    1.7607576 
    4500     1.761615 
    4510    1.7635274 
    4520    1.7656142 
    4530     1.766198 
    4540    1.7644649 
    4550    1.7618865 
    4560    1.7596023 
    4570    1.7580621 
    4580    1.7576328 
    4590    1.7583146 
    4600    1.7595099 
    4610    1.7602709 
    4620    1.7599622 
    4630    1.7589327 
    4640    1.7584147 
    4650     1.759153 
    4660      1.76059 
    4670    1.7616902 
    4680    1.7624024 
    4690    1.7639234 
    4700    1.7665492 
    4710    1.7684722 
    4720    1.7673255 
    4730    1.7632576 
    4740    1.7593713 
    4750    1.7573341 
    4760    1.7571686 
    4770    1.7586958 
    4780    1.7612407 
    4790    1.7634376 
    4800    1.7633095 
    4810    1.7608706 
    4820    1.7592011 
    4830    1.7610066 
    4840    1.7648704 
    4850    1.7676733 
    4860    1.7684447 
    4870     1.767478 
    4880    1.7666013 
    4890    1.7658418 
    4900    1.7650898 
    4910    1.7658751 
    4920    1.7670944 
    4930     1.766549 
    4940    1.7637612 
    4950    1.7601411 
    4960    1.7581869 
    4970    1.7595523 
    4980    1.7624523 
    4990     1.764975 
    5000    1.7665809 
    5010    1.7666837 
    5020    1.7653162 
    5030    1.7636663 
    5040    1.7637422 
    5050    1.7655103 
    5060    1.7669542 
    5070    1.7666829 
    5080    1.7649205 
    5090     1.762435 
    5100    1.7594935 
    5110     1.756534 
    5120    1.7542055 
    5130    1.7537916 
    5140    1.7556774 
    5150    1.7590448 
    5160    1.7618945 
    5170    1.7629237 
    5180    1.7626284 
    5190    1.7618182 
    5200    1.7610052 
    5210    1.7612981 
    5220    1.7615546 
    5230    1.7605792 
    5240     1.759946 
    5250    1.7604385 
    5260    1.7609033 
    5270    1.7600509 
    5280      1.75805 
    5290    1.7565487 
    5300    1.7571704 
    5310    1.7595609 
    5320    1.7617986 
    5330    1.7616171 
    5340    1.7584162 
    5350    1.7534869 
    5360      1.74874 
    5370    1.7457464 
    5380     1.746034 
    5390    1.7502044 
    5400    1.7556065 
    5410     1.757846 
    5420    1.7573366 
    5430    1.7578293 
    5440    1.7592021 
    5450    1.7594308 
    5460    1.7591309 
    5470    1.7584939 
    5480    1.7575641 
    5490    1.7570597 
    5500    1.7569359 
    5510    1.7576885 
    5520    1.7592717 
    5530    1.7604725 
    5540    1.7607873 
    5550     1.761248 
    5560    1.7610493 
    5570    1.7602748 
    5580    1.7598731 
    5590    1.7598678 
    5600    1.7600238 
    5610    1.7614322 
    5620    1.7636281 
    5630    1.7646979 
    5640    1.7653211 
    5650    1.7667836 
    5660    1.7687233 
    5670    1.7702151 
    5680    1.7706043 
    5690    1.7698995 
    5700    1.7693228 
    5710    1.7691299 
    5720    1.7683015 
    5730    1.7679464 
    5740    1.7693836 
    5750     1.771535 
    5760     1.773171 
    5770    1.7735247 
    5780    1.7716739 
    5790    1.7680542 
    5800    1.7644147 
    5810    1.7624977 
    5820    1.7615046 
    5830    1.7598886 
    5840    1.7586686 
    5850    1.7596496 
    5860    1.7624174 
    5870    1.7651421 
    5880    1.7669959 
    5890    1.7673171 
    5900     1.766186 
    5910    1.7655384 
    5920    1.7666051 
    5930    1.7689712 
    5940    1.7711678 
    5950    1.7724186 
    5960    1.7729564 
    5970    1.7722084 
    5980     1.769749 
    5990    1.7670371 
    6000    1.7651646 
    6010    1.7641432 
    6020    1.7646282 
    6030    1.7671777 
    6040    1.7702949 
    6050    1.7716896 
    6060    1.7705304 
    6070    1.7683503 
    6080    1.7669943 
    6090     1.765781 
    6100    1.7645619 
    6110    1.7641258 
    6120     1.765308 
    6130    1.7668481 
    6140    1.7679387 
    6150    1.7690434 
    6160    1.7701079 
    6170    1.7706508 
    6180     1.769775 
    6190    1.7675724 
    6200    1.7655244 
    6210    1.7645729 
    6220    1.7647601 
    6230    1.7655587 
    6240    1.7661093 
    6250     1.765953 
    6260     1.766341 
    6270    1.7679419 
    6280    1.7693684 
    6290    1.7692788 
    6300    1.7684781 
    6310     1.768925 
    6320    1.7706741 
    6330    1.7718755 
    6340    1.7724654 
    6350     1.773407 
    6360    1.7730534 
    6370    1.7704513 
    6380    1.7674362 
    6390      1.76573 
    6400    1.7660703 
    6410    1.7681866 
    6420    1.7704319 
    6430    1.7719009 
    6440     1.773034 
    6450    1.7746912 
    6460    1.7772497 
    6470    1.7794841 
    6480    1.7798001 
    6490    1.7767157 
    6500    1.7707314 
    6510    1.7662858 
    6520    1.7655382 
    6530    1.7662799 
    6540    1.7665298 
    6550    1.7658736 
    6560    1.7647745 
    6570    1.7649894 
    6580    1.7675774 
    6590    1.7705467 
    6600     1.771712 
    6610    1.7720565 
    6620    1.7727853 
    6630    1.7725588 
    6640    1.7707072 
    6650    1.7682452 
    6660    1.7657407 
    6670    1.7633179 
    6680    1.7618155 
    6690    1.7619388 
    6700    1.7632423 
    6710    1.7649031 
    6720    1.7672994 
    6730    1.7712028 
    6740    1.7749245 
    6750    1.7760558 
    6760    1.7743794 
    6770    1.7722316 
    6780    1.7710195 
    6790    1.7704843 
    6800    1.7701034 
    6810    1.7698614 
    6820    1.7703659 
    6830    1.7716745 
    6840    1.7724085 
    6850    1.7716717 
    6860    1.7702582 
    6870    1.7691481 
    6880    1.7692158 
    6890      1.77081 
    6900    1.7716419 
    6910    1.7701512 
    6920    1.7684137 
    6930    1.7686878 
    6940    1.7710561 
    6950    1.7740955 
    6960    1.7769613 
    6970    1.7786353 
    6980    1.7778586 
    6990    1.7768243 
    7000    1.7769796 
    7010    1.7765441 
    7020     1.775007 
    7030    1.7733065 
    7040    1.7714455 
    7050     1.769198 
    7060    1.7671376 
    7070    1.7646931 
    7080    1.7615189 
    7090    1.7582277 
    7100    1.7563379 
    7110    1.7569245 
    7120    1.7600198 
    7130    1.7639405 
    7140    1.7662321 
    7150    1.7660671 
    7160    1.7640816 
    7170    1.7618895 
    7180    1.7613123 
    7190    1.7616222 
    7200    1.7611837 
    7210    1.7603579 
    7220    1.7597813 
    7230    1.7596497 
    7240    1.7607772 
    7250    1.7646806 
    7260    1.7691293 
    7270    1.7710562 
    7280    1.7704075 
    7290    1.7690267 
    7300    1.7684785 
    7310    1.7679455 
    7320    1.7659429 
    7330    1.7631472 
    7340    1.7607836 
    7350    1.7598706 
    7360    1.7605739 
    7370    1.7622926 
    7380    1.7651098 
    7390    1.7673368 
    7400    1.7669006 
    7410    1.7652143 
    7420    1.7644694 
    7430    1.7651458 
    7440    1.7662733 
    7450    1.7670573 
    7460    1.7677638 
    7470    1.7684838 
    7480    1.7681685 
    7490    1.7667455 
    7500     1.765407 
    7510    1.7646547 
    7520    1.7640613 
    7530    1.7621408 
    7540    1.7602501 
    7550    1.7611637 
    7560    1.7632756 
    7570    1.7637451 
    7580    1.7632208 
    7590    1.7632981 
    7600    1.7637422 
    7610    1.7640821 
    7620    1.7637001 
    7630    1.7620053 
    7640    1.7599229 
    7650    1.7589035 
    7660    1.7588906 
    7670    1.7593897 
    7680    1.7601822 
    7690     1.760436 
    7700    1.7594456 
    7710    1.7588662 
    7720    1.7597003 
    7730    1.7613226 
    7740    1.7631679 
    7750    1.7652608 
    7760    1.7672923 
    7770     1.768792 
    7780    1.7685206 
    7790    1.7662143 
    7800    1.7641884 
    7810    1.7638963 
    7820    1.7649159 
    7830    1.7664179 
    7840     1.767744 
    7850    1.7683929 
    7860     1.768984 
    7870    1.7704159 
    7880     1.771618 
    7890    1.7720264 
    7900    1.7723726 
    7910    1.7722331 
    7920    1.7703533 
    7930    1.7674848 
    7940    1.7654302 
    7950    1.7657251 
    7960    1.7685171 
    7970    1.7709006 
    7980    1.7711564 
    7990    1.7703049 
    8000     1.769187 
    8010    1.7676043 
    8020    1.7658474 
    8030    1.7648567 
    8040    1.7650994 
    8050     1.766268 
    8060     1.767827 
    8070    1.7686989 
    8080    1.7684109 
    8090    1.7675624 
    8100    1.7666459 
    8110    1.7654318 
    8120    1.7641312 
    8130     1.763124 
    8140    1.7620195 
    8150    1.7613331 
    8160    1.7624548 
    8170    1.7654713 
    8180    1.7685426 
    8190    1.7693998 
    8200    1.7684189 
    8210    1.7669107 
    8220      1.76602 
    8230    1.7676573 
    8240    1.7723751 
    8250    1.7770204 
    8260    1.7776264 
    8270    1.7746247 
    8280    1.7714537 
    8290    1.7689653 
    8300    1.7660116 
    8310    1.7624377 
    8320    1.7588086 
    8330     1.757011 
    8340    1.7579034 
    8350    1.7608166 
    8360    1.7647794 
    8370    1.7678862 
    8380    1.7682698 
    8390    1.7661871 
    8400    1.7641498 
    8410    1.7635017 
    8420     1.764197 
    8430    1.7659026 
    8440    1.7681778 
    8450    1.7701657 
    8460      1.77047 
    8470    1.7686074 
    8480      1.76677 
    8490    1.7667752 
    8500    1.7673553 
    8510    1.7670448 
    8520     1.766252 
    8530    1.7653734 
    8540    1.7635345 
    8550    1.7615786 
    8560    1.7612495 
    8570    1.7611284 
    8580    1.7603689 
    8590    1.7597657 
    8600    1.7593441 
    8610    1.7586227 
    8620    1.7580203 
    8630    1.7586303 
    8640     1.759876 
    8650    1.7603575 
    8660    1.7602943 
    8670    1.7598495 
    8680    1.7600232 
    8690    1.7623555 
    8700     1.765681 
    8710    1.7676402 
    8720    1.7675157 
    8730    1.7661172 
    8740    1.7643054 
    8750    1.7619277 
    8760    1.7592401 
    8770    1.7572739 
    8780    1.7570494 
    8790    1.7585522 
    8800    1.7605471 
    8810    1.7620306 
    8820    1.7626422 
    8830    1.7625196 
    8840    1.7629407 
    8850    1.7654552 
    8860    1.7688951 
    8870    1.7705759 
    8880    1.7699257 
    8890    1.7675589 
    8900    1.7636823 
    8910     1.758992 
    8920    1.7553289 
    8930     1.754266 
    8940    1.7549072 
    8950     1.756556 
    8960     1.758923 
    8970    1.7610419 
    8980    1.7626986 
    8990    1.7635289 
    9000    1.7636156 
    9010    1.7639151 
    9020    1.7651155 
    9030    1.7673923 
    9040    1.7699534 
    9050    1.7715911 
    9060    1.7713784 
    9070    1.7690757 
    9080    1.7657475 
    9090    1.7637224 
    9100    1.7631536 
    9110    1.7625801 
    9120    1.7608588 
    9130    1.7591434 
    9140    1.7592894 
    9150    1.7595178 
    9160    1.7579093 
    9170    1.7567753 
    9180    1.7579461 
    9190    1.7608759 
    9200    1.7645579 
    9210    1.7672843 
    9220    1.7688699 
    9230    1.7696841 
    9240    1.7696397 
    9250    1.7688474 
    9260    1.7675919 
    9270    1.7660775 
    9280    1.7640991 
    9290    1.7622948 
    9300    1.7612335 
    9310    1.7621329 
    9320    1.7654855 
    9330    1.7697077 
    9340    1.7724475 
    9350    1.7724662 
    9360    1.7709019 
    9370    1.7696915 
    9380    1.7678508 
    9390    1.7650715 
    9400    1.7631814 
    9410    1.7627128 
    9420    1.7619646 
    9430    1.7611719 
    9440    1.7609898 
    9450    1.7608817 
    9460    1.7603928 
    9470    1.7588899 
    9480    1.7576074 
    9490    1.7586661 
    9500    1.7621434 
    9510    1.7662828 
    9520    1.7704506 
    9530    1.7735075 
    9540    1.7742243 
    9550    1.7720533 
    9560    1.7675176 
    9570    1.7632988 
    9580    1.7613399 
    9590    1.7610567 
    9600    1.7611274 
    9610    1.7617544 
    9620    1.7627484 
    9630    1.7625008 
    9640    1.7616796 
    9650     1.762595 
    9660    1.7657764 
    9670    1.7690661 
    9680    1.7707661 
    9690    1.7704669 
    9700    1.7682258 
    9710    1.7658294 
    9720    1.7637808 
    9730    1.7625248 
    9740    1.7632465 
    9750    1.7653052 
    9760    1.7661236 
    9770    1.7648506 
    9780    1.7637654 
    9790    1.7645194 
    9800    1.7662538 
    9810    1.7675949 
    9820    1.7673752 
    9830    1.7648789 
    9840       1.7617 
    9850    1.7594167 
    9860    1.7584217 
    9870     1.757833 
    9880    1.7574632 
    9890    1.7585599 
    9900    1.7606494 
    9910    1.7631745 
    9920     1.766749 
    9930    1.7699294 
    9940    1.7702074 
    9950    1.7679717 
    9960    1.7657773 
    9970    1.7643859 
    9980    1.7632727 
    9990    1.7625744 
   10000    1.7621552 
Loop time of 42.1982 on 8 procs for 10000 steps with 32000 atoms

Performance: 20474.828 tau/day, 236.977 timesteps/s
82.1% CPU use with 8 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 24.389     | 26.392     | 28.262     |  25.6 | 62.54
Neigh   | 3.0839     | 3.3289     | 3.5829     |   9.5 |  7.89
Comm    | 8.8373     | 11.102     | 13.471     |  47.3 | 26.31
Output  | 0.096885   | 0.16662    | 0.35276    |  18.6 |  0.39
Modify  | 0.80108    | 0.96302    | 1.146      |  12.2 |  2.28
Other   |            | 0.2456     |            |       |  0.58

Nlocal:    4000 ave 4171 max 3937 min
Histogram: 4 1 1 0 0 0 1 0 0 1
Nghost:    5484.62 ave 5596 max 5370 min
Histogram: 1 1 0 0 2 1 1 1 0 1
Neighs:    117458 ave 121300 max 112359 min
Histogram: 1 1 0 1 0 1 0 0 3 1

Total # of neighbors = 939663
Ave neighs/atom = 29.3645
Neighbor list builds = 500
Dangerous builds not checked
print ${vol}
print 3488.5
3488.5
Total wall time: 0:00:42
